name: "Push docker image to GAR"

on:
  push:
    branches: [main]
    tags:
      - "taiko-client-v*"
    paths:
      - "packages/taiko-client/**"

jobs:
  push-docker-image:
    name: Build and push docker image
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Login to GAR
        uses: docker/login-action@v2
        with:
          registry: us-docker.pkg.dev
          username: _json_key
          password: ${{ secrets.GAR_JSON_KEY }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            us-docker.pkg.dev/evmchain/images/taiko-client
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=ref,event=tag
            type=sha

      - name: Cache Go build
        uses: actions/cache@v4
        with:
          enableCrossOsArchive: true
          path: |
            go-build-platforms
          key: ${{ runner.os }}-go_build-platforms
          restore-keys: |
            ${{ runner.os }}-go_build-platforms

      - name: Inject cache into docker
        uses: reproducible-containers/buildkit-cache-dance@v3.1.0
        with:
          cache-map: |
            {
              "go-build-platforms": "/root/.cache/go-build"
            }
          skip-extraction: ${{ steps.cache.outputs.cache-hit }}

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          cache-from: type=gha
          cache-to: type=gha,mode=max
          file: packages/taiko-client/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
