// Generated by @wagmi/cli@1.3.0 on 8/30/2023 at 11:07:31 AM

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Bridge
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const bridgeABI = [
  { type: 'error', inputs: [], name: 'B_DENIED' },
  { type: 'error', inputs: [], name: 'B_DENIED' },
  { type: 'error', inputs: [], name: 'B_ERC20_CANNOT_RECEIVE' },
  { type: 'error', inputs: [], name: 'B_EV_DO_NOT_BURN' },
  { type: 'error', inputs: [], name: 'B_EV_NOT_AUTHORIZED' },
  { type: 'error', inputs: [], name: 'B_EV_PARAM' },
  { type: 'error', inputs: [], name: 'B_FAILED_TRANSFER' },
  { type: 'error', inputs: [], name: 'B_FORBIDDEN' },
  { type: 'error', inputs: [], name: 'B_FORBIDDEN' },
  { type: 'error', inputs: [], name: 'B_GAS_LIMIT' },
  { type: 'error', inputs: [], name: 'B_GAS_LIMIT' },
  { type: 'error', inputs: [], name: 'B_INCORRECT_VALUE' },
  { type: 'error', inputs: [], name: 'B_INCORRECT_VALUE' },
  { type: 'error', inputs: [], name: 'B_INIT_PARAM_ERROR' },
  { type: 'error', inputs: [], name: 'B_MSG_HASH_NULL' },
  { type: 'error', inputs: [], name: 'B_MSG_HASH_NULL' },
  { type: 'error', inputs: [], name: 'B_MSG_NON_RETRIABLE' },
  { type: 'error', inputs: [], name: 'B_MSG_NON_RETRIABLE' },
  { type: 'error', inputs: [], name: 'B_MSG_NOT_FAILED' },
  { type: 'error', inputs: [], name: 'B_MSG_NOT_FAILED' },
  { type: 'error', inputs: [], name: 'B_MSG_RECALLED_ALREADY' },
  { type: 'error', inputs: [], name: 'B_MSG_RECALLED_ALREADY' },
  { type: 'error', inputs: [], name: 'B_NULL_APP_ADDR' },
  { type: 'error', inputs: [], name: 'B_SIGNAL_NOT_RECEIVED' },
  { type: 'error', inputs: [], name: 'B_SIGNAL_NOT_RECEIVED' },
  { type: 'error', inputs: [], name: 'B_STATUS_MISMATCH' },
  { type: 'error', inputs: [], name: 'B_STATUS_MISMATCH' },
  { type: 'error', inputs: [], name: 'B_USER_IS_NULL' },
  { type: 'error', inputs: [], name: 'B_USER_IS_NULL' },
  { type: 'error', inputs: [], name: 'B_WRONG_CHAIN_ID' },
  { type: 'error', inputs: [], name: 'B_WRONG_CHAIN_ID' },
  { type: 'error', inputs: [], name: 'B_WRONG_CHAIN_ID' },
  { type: 'error', inputs: [], name: 'B_WRONG_CHAIN_ID' },
  { type: 'error', inputs: [], name: 'B_WRONG_TO_ADDRESS' },
  { type: 'error', inputs: [], name: 'B_WRONG_TO_ADDRESS' },
  { type: 'error', inputs: [], name: 'B_ZERO_SIGNAL' },
  { type: 'error', inputs: [], name: 'RESOLVER_DENIED' },
  { type: 'error', inputs: [], name: 'RESOLVER_INVALID_ADDR' },
  {
    type: 'error',
    inputs: [
      { name: 'chainId', internalType: 'uint256', type: 'uint256' },
      { name: 'name', internalType: 'bytes32', type: 'bytes32' },
    ],
    name: 'RESOLVER_ZERO_ADDR',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'addressManager', internalType: 'address', type: 'address', indexed: true }],
    name: 'AddressManagerChanged',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'chainId', internalType: 'uint256', type: 'uint256', indexed: true },
      { name: 'enabled', internalType: 'bool', type: 'bool', indexed: false },
    ],
    name: 'DestChainEnabled',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'version', internalType: 'uint8', type: 'uint8', indexed: false }],
    name: 'Initialized',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'msgHash', internalType: 'bytes32', type: 'bytes32', indexed: true }],
    name: 'MessageRecalled',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'msgHash', internalType: 'bytes32', type: 'bytes32', indexed: true }],
    name: 'MessageRecalled',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'msgHash', internalType: 'bytes32', type: 'bytes32', indexed: true },
      {
        name: 'message',
        internalType: 'struct IBridge.Message',
        type: 'tuple',
        components: [
          { name: 'id', internalType: 'uint256', type: 'uint256' },
          { name: 'from', internalType: 'address', type: 'address' },
          { name: 'srcChainId', internalType: 'uint256', type: 'uint256' },
          { name: 'destChainId', internalType: 'uint256', type: 'uint256' },
          { name: 'user', internalType: 'address', type: 'address' },
          { name: 'to', internalType: 'address', type: 'address' },
          { name: 'refundTo', internalType: 'address', type: 'address' },
          { name: 'value', internalType: 'uint256', type: 'uint256' },
          { name: 'fee', internalType: 'uint256', type: 'uint256' },
          { name: 'gasLimit', internalType: 'uint256', type: 'uint256' },
          { name: 'data', internalType: 'bytes', type: 'bytes' },
          { name: 'memo', internalType: 'string', type: 'string' },
        ],
        indexed: false,
      },
    ],
    name: 'MessageSent',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'msgHash', internalType: 'bytes32', type: 'bytes32', indexed: true },
      {
        name: 'message',
        internalType: 'struct IBridge.Message',
        type: 'tuple',
        components: [
          { name: 'id', internalType: 'uint256', type: 'uint256' },
          { name: 'from', internalType: 'address', type: 'address' },
          { name: 'srcChainId', internalType: 'uint256', type: 'uint256' },
          { name: 'destChainId', internalType: 'uint256', type: 'uint256' },
          { name: 'user', internalType: 'address', type: 'address' },
          { name: 'to', internalType: 'address', type: 'address' },
          { name: 'refundTo', internalType: 'address', type: 'address' },
          { name: 'value', internalType: 'uint256', type: 'uint256' },
          { name: 'fee', internalType: 'uint256', type: 'uint256' },
          { name: 'gasLimit', internalType: 'uint256', type: 'uint256' },
          { name: 'data', internalType: 'bytes', type: 'bytes' },
          { name: 'memo', internalType: 'string', type: 'string' },
        ],
        indexed: false,
      },
    ],
    name: 'MessageSent',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'msgHash', internalType: 'bytes32', type: 'bytes32', indexed: true },
      { name: 'status', internalType: 'enum LibBridgeStatus.MessageStatus', type: 'uint8', indexed: false },
      { name: 'transactor', internalType: 'address', type: 'address', indexed: false },
    ],
    name: 'MessageStatusChanged',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'msgHash', internalType: 'bytes32', type: 'bytes32', indexed: true },
      { name: 'status', internalType: 'enum LibBridgeStatus.MessageStatus', type: 'uint8', indexed: false },
      { name: 'transactor', internalType: 'address', type: 'address', indexed: false },
    ],
    name: 'MessageStatusChanged',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'previousOwner', internalType: 'address', type: 'address', indexed: true },
      { name: 'newOwner', internalType: 'address', type: 'address', indexed: true },
    ],
    name: 'OwnershipTransferred',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'sender', internalType: 'address', type: 'address', indexed: true },
      { name: 'msgHash', internalType: 'bytes32', type: 'bytes32', indexed: false },
    ],
    name: 'SignalSent',
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'addressManager',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'context',
    outputs: [
      {
        name: '',
        internalType: 'struct IBridge.Context',
        type: 'tuple',
        components: [
          { name: 'msgHash', internalType: 'bytes32', type: 'bytes32' },
          { name: 'from', internalType: 'address', type: 'address' },
          { name: 'srcChainId', internalType: 'uint256', type: 'uint256' },
        ],
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'msgHash', internalType: 'bytes32', type: 'bytes32' }],
    name: 'getMessageStatus',
    outputs: [{ name: '', internalType: 'enum LibBridgeStatus.MessageStatus', type: 'uint8' }],
  },
  {
    stateMutability: 'pure',
    type: 'function',
    inputs: [{ name: 'msgHash', internalType: 'bytes32', type: 'bytes32' }],
    name: 'getMessageStatusSlot',
    outputs: [{ name: '', internalType: 'bytes32', type: 'bytes32' }],
  },
  {
    stateMutability: 'pure',
    type: 'function',
    inputs: [
      {
        name: 'message',
        internalType: 'struct IBridge.Message',
        type: 'tuple',
        components: [
          { name: 'id', internalType: 'uint256', type: 'uint256' },
          { name: 'from', internalType: 'address', type: 'address' },
          { name: 'srcChainId', internalType: 'uint256', type: 'uint256' },
          { name: 'destChainId', internalType: 'uint256', type: 'uint256' },
          { name: 'user', internalType: 'address', type: 'address' },
          { name: 'to', internalType: 'address', type: 'address' },
          { name: 'refundTo', internalType: 'address', type: 'address' },
          { name: 'value', internalType: 'uint256', type: 'uint256' },
          { name: 'fee', internalType: 'uint256', type: 'uint256' },
          { name: 'gasLimit', internalType: 'uint256', type: 'uint256' },
          { name: 'data', internalType: 'bytes', type: 'bytes' },
          { name: 'memo', internalType: 'string', type: 'string' },
        ],
      },
    ],
    name: 'hashMessage',
    outputs: [{ name: '', internalType: 'bytes32', type: 'bytes32' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: '_addressManager', internalType: 'address', type: 'address' }],
    name: 'init',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: '_chainId', internalType: 'uint256', type: 'uint256' }],
    name: 'isDestChainEnabled',
    outputs: [{ name: 'enabled', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'msgHash', internalType: 'bytes32', type: 'bytes32' },
      { name: 'destChainId', internalType: 'uint256', type: 'uint256' },
      { name: 'proof', internalType: 'bytes', type: 'bytes' },
    ],
    name: 'isMessageFailed',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'msgHash', internalType: 'bytes32', type: 'bytes32' }],
    name: 'isMessageRecalled',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'msgHash', internalType: 'bytes32', type: 'bytes32' },
      { name: 'srcChainId', internalType: 'uint256', type: 'uint256' },
      { name: 'proof', internalType: 'bytes', type: 'bytes' },
    ],
    name: 'isMessageReceived',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'msgHash', internalType: 'bytes32', type: 'bytes32' }],
    name: 'isMessageSent',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'owner',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      {
        name: 'message',
        internalType: 'struct IBridge.Message',
        type: 'tuple',
        components: [
          { name: 'id', internalType: 'uint256', type: 'uint256' },
          { name: 'from', internalType: 'address', type: 'address' },
          { name: 'srcChainId', internalType: 'uint256', type: 'uint256' },
          { name: 'destChainId', internalType: 'uint256', type: 'uint256' },
          { name: 'user', internalType: 'address', type: 'address' },
          { name: 'to', internalType: 'address', type: 'address' },
          { name: 'refundTo', internalType: 'address', type: 'address' },
          { name: 'value', internalType: 'uint256', type: 'uint256' },
          { name: 'fee', internalType: 'uint256', type: 'uint256' },
          { name: 'gasLimit', internalType: 'uint256', type: 'uint256' },
          { name: 'data', internalType: 'bytes', type: 'bytes' },
          { name: 'memo', internalType: 'string', type: 'string' },
        ],
      },
      { name: 'proof', internalType: 'bytes', type: 'bytes' },
    ],
    name: 'processMessage',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      {
        name: 'message',
        internalType: 'struct IBridge.Message',
        type: 'tuple',
        components: [
          { name: 'id', internalType: 'uint256', type: 'uint256' },
          { name: 'from', internalType: 'address', type: 'address' },
          { name: 'srcChainId', internalType: 'uint256', type: 'uint256' },
          { name: 'destChainId', internalType: 'uint256', type: 'uint256' },
          { name: 'user', internalType: 'address', type: 'address' },
          { name: 'to', internalType: 'address', type: 'address' },
          { name: 'refundTo', internalType: 'address', type: 'address' },
          { name: 'value', internalType: 'uint256', type: 'uint256' },
          { name: 'fee', internalType: 'uint256', type: 'uint256' },
          { name: 'gasLimit', internalType: 'uint256', type: 'uint256' },
          { name: 'data', internalType: 'bytes', type: 'bytes' },
          { name: 'memo', internalType: 'string', type: 'string' },
        ],
      },
      { name: 'proof', internalType: 'bytes', type: 'bytes' },
    ],
    name: 'recallMessage',
    outputs: [],
  },
  { stateMutability: 'nonpayable', type: 'function', inputs: [], name: 'renounceOwnership', outputs: [] },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'chainId', internalType: 'uint256', type: 'uint256' },
      { name: 'name', internalType: 'bytes32', type: 'bytes32' },
      { name: 'allowZeroAddress', internalType: 'bool', type: 'bool' },
    ],
    name: 'resolve',
    outputs: [{ name: 'addr', internalType: 'address payable', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'name', internalType: 'bytes32', type: 'bytes32' },
      { name: 'allowZeroAddress', internalType: 'bool', type: 'bool' },
    ],
    name: 'resolve',
    outputs: [{ name: 'addr', internalType: 'address payable', type: 'address' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      {
        name: 'message',
        internalType: 'struct IBridge.Message',
        type: 'tuple',
        components: [
          { name: 'id', internalType: 'uint256', type: 'uint256' },
          { name: 'from', internalType: 'address', type: 'address' },
          { name: 'srcChainId', internalType: 'uint256', type: 'uint256' },
          { name: 'destChainId', internalType: 'uint256', type: 'uint256' },
          { name: 'user', internalType: 'address', type: 'address' },
          { name: 'to', internalType: 'address', type: 'address' },
          { name: 'refundTo', internalType: 'address', type: 'address' },
          { name: 'value', internalType: 'uint256', type: 'uint256' },
          { name: 'fee', internalType: 'uint256', type: 'uint256' },
          { name: 'gasLimit', internalType: 'uint256', type: 'uint256' },
          { name: 'data', internalType: 'bytes', type: 'bytes' },
          { name: 'memo', internalType: 'string', type: 'string' },
        ],
      },
      { name: 'isLastAttempt', internalType: 'bool', type: 'bool' },
    ],
    name: 'retryMessage',
    outputs: [],
  },
  {
    stateMutability: 'payable',
    type: 'function',
    inputs: [
      {
        name: 'message',
        internalType: 'struct IBridge.Message',
        type: 'tuple',
        components: [
          { name: 'id', internalType: 'uint256', type: 'uint256' },
          { name: 'from', internalType: 'address', type: 'address' },
          { name: 'srcChainId', internalType: 'uint256', type: 'uint256' },
          { name: 'destChainId', internalType: 'uint256', type: 'uint256' },
          { name: 'user', internalType: 'address', type: 'address' },
          { name: 'to', internalType: 'address', type: 'address' },
          { name: 'refundTo', internalType: 'address', type: 'address' },
          { name: 'value', internalType: 'uint256', type: 'uint256' },
          { name: 'fee', internalType: 'uint256', type: 'uint256' },
          { name: 'gasLimit', internalType: 'uint256', type: 'uint256' },
          { name: 'data', internalType: 'bytes', type: 'bytes' },
          { name: 'memo', internalType: 'string', type: 'string' },
        ],
      },
    ],
    name: 'sendMessage',
    outputs: [{ name: 'msgHash', internalType: 'bytes32', type: 'bytes32' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'newAddressManager', internalType: 'address', type: 'address' }],
    name: 'setAddressManager',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'newOwner', internalType: 'address', type: 'address' }],
    name: 'transferOwnership',
    outputs: [],
  },
  { stateMutability: 'payable', type: 'receive' },
] as const;

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// EtherVault
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const etherVaultABI = [
  { type: 'error', inputs: [], name: 'B_DENIED' },
  { type: 'error', inputs: [], name: 'B_ERC20_CANNOT_RECEIVE' },
  { type: 'error', inputs: [], name: 'B_EV_DO_NOT_BURN' },
  { type: 'error', inputs: [], name: 'B_EV_NOT_AUTHORIZED' },
  { type: 'error', inputs: [], name: 'B_EV_PARAM' },
  { type: 'error', inputs: [], name: 'B_FAILED_TRANSFER' },
  { type: 'error', inputs: [], name: 'B_FORBIDDEN' },
  { type: 'error', inputs: [], name: 'B_GAS_LIMIT' },
  { type: 'error', inputs: [], name: 'B_INCORRECT_VALUE' },
  { type: 'error', inputs: [], name: 'B_INIT_PARAM_ERROR' },
  { type: 'error', inputs: [], name: 'B_MSG_HASH_NULL' },
  { type: 'error', inputs: [], name: 'B_MSG_NON_RETRIABLE' },
  { type: 'error', inputs: [], name: 'B_MSG_NOT_FAILED' },
  { type: 'error', inputs: [], name: 'B_MSG_RECALLED_ALREADY' },
  { type: 'error', inputs: [], name: 'B_NULL_APP_ADDR' },
  { type: 'error', inputs: [], name: 'B_SIGNAL_NOT_RECEIVED' },
  { type: 'error', inputs: [], name: 'B_STATUS_MISMATCH' },
  { type: 'error', inputs: [], name: 'B_USER_IS_NULL' },
  { type: 'error', inputs: [], name: 'B_WRONG_CHAIN_ID' },
  { type: 'error', inputs: [], name: 'B_WRONG_TO_ADDRESS' },
  { type: 'error', inputs: [], name: 'B_ZERO_SIGNAL' },
  { type: 'error', inputs: [], name: 'RESOLVER_DENIED' },
  { type: 'error', inputs: [], name: 'RESOLVER_INVALID_ADDR' },
  {
    type: 'error',
    inputs: [
      { name: 'chainId', internalType: 'uint256', type: 'uint256' },
      { name: 'name', internalType: 'bytes32', type: 'bytes32' },
    ],
    name: 'RESOLVER_ZERO_ADDR',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'addressManager', internalType: 'address', type: 'address', indexed: true }],
    name: 'AddressManagerChanged',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'addr', internalType: 'address', type: 'address', indexed: true },
      { name: 'authorized', internalType: 'bool', type: 'bool', indexed: false },
    ],
    name: 'Authorized',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'to', internalType: 'address', type: 'address', indexed: true },
      { name: 'amount', internalType: 'uint256', type: 'uint256', indexed: false },
    ],
    name: 'EtherReleased',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'version', internalType: 'uint8', type: 'uint8', indexed: false }],
    name: 'Initialized',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'previousOwner', internalType: 'address', type: 'address', indexed: true },
      { name: 'newOwner', internalType: 'address', type: 'address', indexed: true },
    ],
    name: 'OwnershipTransferred',
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'addressManager',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'addr', internalType: 'address', type: 'address' },
      { name: 'authorized', internalType: 'bool', type: 'bool' },
    ],
    name: 'authorize',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'addressManager', internalType: 'address', type: 'address' }],
    name: 'init',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'addr', internalType: 'address', type: 'address' }],
    name: 'isAuthorized',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'owner',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'recipient', internalType: 'address', type: 'address' },
      { name: 'amount', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'releaseEther',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'amount', internalType: 'uint256', type: 'uint256' }],
    name: 'releaseEther',
    outputs: [],
  },
  { stateMutability: 'nonpayable', type: 'function', inputs: [], name: 'renounceOwnership', outputs: [] },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'chainId', internalType: 'uint256', type: 'uint256' },
      { name: 'name', internalType: 'bytes32', type: 'bytes32' },
      { name: 'allowZeroAddress', internalType: 'bool', type: 'bool' },
    ],
    name: 'resolve',
    outputs: [{ name: 'addr', internalType: 'address payable', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'name', internalType: 'bytes32', type: 'bytes32' },
      { name: 'allowZeroAddress', internalType: 'bool', type: 'bool' },
    ],
    name: 'resolve',
    outputs: [{ name: 'addr', internalType: 'address payable', type: 'address' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'newAddressManager', internalType: 'address', type: 'address' }],
    name: 'setAddressManager',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'newOwner', internalType: 'address', type: 'address' }],
    name: 'transferOwnership',
    outputs: [],
  },
  { stateMutability: 'payable', type: 'receive' },
] as const;

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// ERC20Vault
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const erc20VaultABI = [
  { type: 'error', inputs: [], name: 'RESOLVER_DENIED' },
  { type: 'error', inputs: [], name: 'RESOLVER_INVALID_ADDR' },
  {
    type: 'error',
    inputs: [
      { name: 'chainId', internalType: 'uint256', type: 'uint256' },
      { name: 'name', internalType: 'bytes32', type: 'bytes32' },
    ],
    name: 'RESOLVER_ZERO_ADDR',
  },
  { type: 'error', inputs: [], name: 'VAULT_INVALID_AMOUNT' },
  { type: 'error', inputs: [], name: 'VAULT_INVALID_FROM' },
  { type: 'error', inputs: [], name: 'VAULT_INVALID_SRC_CHAIN_ID' },
  { type: 'error', inputs: [], name: 'VAULT_INVALID_TO' },
  { type: 'error', inputs: [], name: 'VAULT_INVALID_TOKEN' },
  { type: 'error', inputs: [], name: 'VAULT_INVALID_USER' },
  { type: 'error', inputs: [], name: 'VAULT_MESSAGE_NOT_FAILED' },
  { type: 'error', inputs: [], name: 'VAULT_MESSAGE_RELEASED_ALREADY' },
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'addressManager', internalType: 'address', type: 'address', indexed: true }],
    name: 'AddressManagerChanged',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'srcChainId', internalType: 'uint256', type: 'uint256', indexed: true },
      { name: 'ctoken', internalType: 'address', type: 'address', indexed: true },
      { name: 'btoken', internalType: 'address', type: 'address', indexed: true },
      { name: 'ctokenSymbol', internalType: 'string', type: 'string', indexed: false },
      { name: 'ctokenName', internalType: 'string', type: 'string', indexed: false },
      { name: 'ctokenDecimal', internalType: 'uint8', type: 'uint8', indexed: false },
    ],
    name: 'BridgedTokenDeployed',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'version', internalType: 'uint8', type: 'uint8', indexed: false }],
    name: 'Initialized',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'previousOwner', internalType: 'address', type: 'address', indexed: true },
      { name: 'newOwner', internalType: 'address', type: 'address', indexed: true },
    ],
    name: 'OwnershipTransferred',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'msgHash', internalType: 'bytes32', type: 'bytes32', indexed: true },
      { name: 'from', internalType: 'address', type: 'address', indexed: true },
      { name: 'to', internalType: 'address', type: 'address', indexed: true },
      { name: 'srcChainId', internalType: 'uint256', type: 'uint256', indexed: false },
      { name: 'token', internalType: 'address', type: 'address', indexed: false },
      { name: 'amount', internalType: 'uint256', type: 'uint256', indexed: false },
    ],
    name: 'TokenReceived',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'msgHash', internalType: 'bytes32', type: 'bytes32', indexed: true },
      { name: 'from', internalType: 'address', type: 'address', indexed: true },
      { name: 'token', internalType: 'address', type: 'address', indexed: false },
      { name: 'amount', internalType: 'uint256', type: 'uint256', indexed: false },
    ],
    name: 'TokenReleased',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'msgHash', internalType: 'bytes32', type: 'bytes32', indexed: true },
      { name: 'from', internalType: 'address', type: 'address', indexed: true },
      { name: 'to', internalType: 'address', type: 'address', indexed: true },
      { name: 'destChainId', internalType: 'uint256', type: 'uint256', indexed: false },
      { name: 'token', internalType: 'address', type: 'address', indexed: false },
      { name: 'amount', internalType: 'uint256', type: 'uint256', indexed: false },
    ],
    name: 'TokenSent',
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'addressManager',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: '', internalType: 'address', type: 'address' }],
    name: 'bridgedToCanonical',
    outputs: [
      { name: 'chainId', internalType: 'uint256', type: 'uint256' },
      { name: 'addr', internalType: 'address', type: 'address' },
      { name: 'decimals', internalType: 'uint8', type: 'uint8' },
      { name: 'symbol', internalType: 'string', type: 'string' },
      { name: 'name', internalType: 'string', type: 'string' },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: '', internalType: 'uint256', type: 'uint256' },
      { name: '', internalType: 'address', type: 'address' },
    ],
    name: 'canonicalToBridged',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'addressManager', internalType: 'address', type: 'address' }],
    name: 'init',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: '', internalType: 'address', type: 'address' }],
    name: 'isBridgedToken',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'payable',
    type: 'function',
    inputs: [
      {
        name: 'message',
        internalType: 'struct IBridge.Message',
        type: 'tuple',
        components: [
          { name: 'id', internalType: 'uint256', type: 'uint256' },
          { name: 'from', internalType: 'address', type: 'address' },
          { name: 'srcChainId', internalType: 'uint256', type: 'uint256' },
          { name: 'destChainId', internalType: 'uint256', type: 'uint256' },
          { name: 'user', internalType: 'address', type: 'address' },
          { name: 'to', internalType: 'address', type: 'address' },
          { name: 'refundTo', internalType: 'address', type: 'address' },
          { name: 'value', internalType: 'uint256', type: 'uint256' },
          { name: 'fee', internalType: 'uint256', type: 'uint256' },
          { name: 'gasLimit', internalType: 'uint256', type: 'uint256' },
          { name: 'data', internalType: 'bytes', type: 'bytes' },
          { name: 'memo', internalType: 'string', type: 'string' },
        ],
      },
    ],
    name: 'onMessageRecalled',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'owner',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'payable',
    type: 'function',
    inputs: [
      {
        name: 'ctoken',
        internalType: 'struct ERC20Vault.CanonicalERC20',
        type: 'tuple',
        components: [
          { name: 'chainId', internalType: 'uint256', type: 'uint256' },
          { name: 'addr', internalType: 'address', type: 'address' },
          { name: 'decimals', internalType: 'uint8', type: 'uint8' },
          { name: 'symbol', internalType: 'string', type: 'string' },
          { name: 'name', internalType: 'string', type: 'string' },
        ],
      },
      { name: 'from', internalType: 'address', type: 'address' },
      { name: 'to', internalType: 'address', type: 'address' },
      { name: 'amount', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'receiveToken',
    outputs: [],
  },
  { stateMutability: 'nonpayable', type: 'function', inputs: [], name: 'renounceOwnership', outputs: [] },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'chainId', internalType: 'uint256', type: 'uint256' },
      { name: 'name', internalType: 'bytes32', type: 'bytes32' },
      { name: 'allowZeroAddress', internalType: 'bool', type: 'bool' },
    ],
    name: 'resolve',
    outputs: [{ name: 'addr', internalType: 'address payable', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'name', internalType: 'bytes32', type: 'bytes32' },
      { name: 'allowZeroAddress', internalType: 'bool', type: 'bool' },
    ],
    name: 'resolve',
    outputs: [{ name: 'addr', internalType: 'address payable', type: 'address' }],
  },
  {
    stateMutability: 'payable',
    type: 'function',
    inputs: [
      {
        name: 'opt',
        internalType: 'struct ERC20Vault.BridgeTransferOp',
        type: 'tuple',
        components: [
          { name: 'destChainId', internalType: 'uint256', type: 'uint256' },
          { name: 'to', internalType: 'address', type: 'address' },
          { name: 'token', internalType: 'address', type: 'address' },
          { name: 'amount', internalType: 'uint256', type: 'uint256' },
          { name: 'gasLimit', internalType: 'uint256', type: 'uint256' },
          { name: 'fee', internalType: 'uint256', type: 'uint256' },
          { name: 'refundTo', internalType: 'address', type: 'address' },
          { name: 'memo', internalType: 'string', type: 'string' },
        ],
      },
    ],
    name: 'sendToken',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'newAddressManager', internalType: 'address', type: 'address' }],
    name: 'setAddressManager',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'interfaceId', internalType: 'bytes4', type: 'bytes4' }],
    name: 'supportsInterface',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'newOwner', internalType: 'address', type: 'address' }],
    name: 'transferOwnership',
    outputs: [],
  },
] as const;

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// ERC721Vault
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const erc721VaultABI = [
  { type: 'error', inputs: [], name: 'RESOLVER_DENIED' },
  { type: 'error', inputs: [], name: 'RESOLVER_INVALID_ADDR' },
  {
    type: 'error',
    inputs: [
      { name: 'chainId', internalType: 'uint256', type: 'uint256' },
      { name: 'name', internalType: 'bytes32', type: 'bytes32' },
    ],
    name: 'RESOLVER_ZERO_ADDR',
  },
  { type: 'error', inputs: [], name: 'VAULT_INTERFACE_NOT_SUPPORTED' },
  { type: 'error', inputs: [], name: 'VAULT_INVALID_AMOUNT' },
  { type: 'error', inputs: [], name: 'VAULT_INVALID_FROM' },
  { type: 'error', inputs: [], name: 'VAULT_INVALID_SRC_CHAIN_ID' },
  { type: 'error', inputs: [], name: 'VAULT_INVALID_TO' },
  { type: 'error', inputs: [], name: 'VAULT_INVALID_TOKEN' },
  { type: 'error', inputs: [], name: 'VAULT_INVALID_USER' },
  { type: 'error', inputs: [], name: 'VAULT_MAX_TOKEN_PER_TXN_EXCEEDED' },
  { type: 'error', inputs: [], name: 'VAULT_MESSAGE_NOT_FAILED' },
  { type: 'error', inputs: [], name: 'VAULT_MESSAGE_RELEASED_ALREADY' },
  { type: 'error', inputs: [], name: 'VAULT_TOKEN_ARRAY_MISMATCH' },
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'addressManager', internalType: 'address', type: 'address', indexed: true }],
    name: 'AddressManagerChanged',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'chainId', internalType: 'uint256', type: 'uint256', indexed: true },
      { name: 'ctoken', internalType: 'address', type: 'address', indexed: true },
      { name: 'btoken', internalType: 'address', type: 'address', indexed: true },
      { name: 'ctokenSymbol', internalType: 'string', type: 'string', indexed: false },
      { name: 'ctokenName', internalType: 'string', type: 'string', indexed: false },
    ],
    name: 'BridgedTokenDeployed',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'version', internalType: 'uint8', type: 'uint8', indexed: false }],
    name: 'Initialized',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'previousOwner', internalType: 'address', type: 'address', indexed: true },
      { name: 'newOwner', internalType: 'address', type: 'address', indexed: true },
    ],
    name: 'OwnershipTransferred',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'msgHash', internalType: 'bytes32', type: 'bytes32', indexed: true },
      { name: 'from', internalType: 'address', type: 'address', indexed: true },
      { name: 'to', internalType: 'address', type: 'address', indexed: true },
      { name: 'srcChainId', internalType: 'uint256', type: 'uint256', indexed: false },
      { name: 'token', internalType: 'address', type: 'address', indexed: false },
      { name: 'tokenIds', internalType: 'uint256[]', type: 'uint256[]', indexed: false },
      { name: 'amounts', internalType: 'uint256[]', type: 'uint256[]', indexed: false },
    ],
    name: 'TokenReceived',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'msgHash', internalType: 'bytes32', type: 'bytes32', indexed: true },
      { name: 'from', internalType: 'address', type: 'address', indexed: true },
      { name: 'token', internalType: 'address', type: 'address', indexed: false },
      { name: 'tokenIds', internalType: 'uint256[]', type: 'uint256[]', indexed: false },
      { name: 'amounts', internalType: 'uint256[]', type: 'uint256[]', indexed: false },
    ],
    name: 'TokenReleased',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'msgHash', internalType: 'bytes32', type: 'bytes32', indexed: true },
      { name: 'from', internalType: 'address', type: 'address', indexed: true },
      { name: 'to', internalType: 'address', type: 'address', indexed: true },
      { name: 'destChainId', internalType: 'uint256', type: 'uint256', indexed: false },
      { name: 'token', internalType: 'address', type: 'address', indexed: false },
      { name: 'tokenIds', internalType: 'uint256[]', type: 'uint256[]', indexed: false },
      { name: 'amounts', internalType: 'uint256[]', type: 'uint256[]', indexed: false },
    ],
    name: 'TokenSent',
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'ERC1155_INTERFACE_ID',
    outputs: [{ name: '', internalType: 'bytes4', type: 'bytes4' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'ERC721_INTERFACE_ID',
    outputs: [{ name: '', internalType: 'bytes4', type: 'bytes4' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'addressManager',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: '', internalType: 'address', type: 'address' }],
    name: 'bridgedToCanonical',
    outputs: [
      { name: 'chainId', internalType: 'uint256', type: 'uint256' },
      { name: 'addr', internalType: 'address', type: 'address' },
      { name: 'symbol', internalType: 'string', type: 'string' },
      { name: 'name', internalType: 'string', type: 'string' },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: '', internalType: 'uint256', type: 'uint256' },
      { name: '', internalType: 'address', type: 'address' },
    ],
    name: 'canonicalToBridged',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'addressManager', internalType: 'address', type: 'address' }],
    name: 'init',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: '', internalType: 'address', type: 'address' }],
    name: 'isBridgedToken',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'pure',
    type: 'function',
    inputs: [
      { name: '', internalType: 'address', type: 'address' },
      { name: '', internalType: 'address', type: 'address' },
      { name: '', internalType: 'uint256', type: 'uint256' },
      { name: '', internalType: 'bytes', type: 'bytes' },
    ],
    name: 'onERC721Received',
    outputs: [{ name: '', internalType: 'bytes4', type: 'bytes4' }],
  },
  {
    stateMutability: 'payable',
    type: 'function',
    inputs: [
      {
        name: 'message',
        internalType: 'struct IBridge.Message',
        type: 'tuple',
        components: [
          { name: 'id', internalType: 'uint256', type: 'uint256' },
          { name: 'from', internalType: 'address', type: 'address' },
          { name: 'srcChainId', internalType: 'uint256', type: 'uint256' },
          { name: 'destChainId', internalType: 'uint256', type: 'uint256' },
          { name: 'user', internalType: 'address', type: 'address' },
          { name: 'to', internalType: 'address', type: 'address' },
          { name: 'refundTo', internalType: 'address', type: 'address' },
          { name: 'value', internalType: 'uint256', type: 'uint256' },
          { name: 'fee', internalType: 'uint256', type: 'uint256' },
          { name: 'gasLimit', internalType: 'uint256', type: 'uint256' },
          { name: 'data', internalType: 'bytes', type: 'bytes' },
          { name: 'memo', internalType: 'string', type: 'string' },
        ],
      },
    ],
    name: 'onMessageRecalled',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'owner',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'payable',
    type: 'function',
    inputs: [
      {
        name: 'ctoken',
        internalType: 'struct BaseNFTVault.CanonicalNFT',
        type: 'tuple',
        components: [
          { name: 'chainId', internalType: 'uint256', type: 'uint256' },
          { name: 'addr', internalType: 'address', type: 'address' },
          { name: 'symbol', internalType: 'string', type: 'string' },
          { name: 'name', internalType: 'string', type: 'string' },
        ],
      },
      { name: 'from', internalType: 'address', type: 'address' },
      { name: 'to', internalType: 'address', type: 'address' },
      { name: 'tokenIds', internalType: 'uint256[]', type: 'uint256[]' },
    ],
    name: 'receiveToken',
    outputs: [],
  },
  { stateMutability: 'nonpayable', type: 'function', inputs: [], name: 'renounceOwnership', outputs: [] },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'chainId', internalType: 'uint256', type: 'uint256' },
      { name: 'name', internalType: 'bytes32', type: 'bytes32' },
      { name: 'allowZeroAddress', internalType: 'bool', type: 'bool' },
    ],
    name: 'resolve',
    outputs: [{ name: 'addr', internalType: 'address payable', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'name', internalType: 'bytes32', type: 'bytes32' },
      { name: 'allowZeroAddress', internalType: 'bool', type: 'bool' },
    ],
    name: 'resolve',
    outputs: [{ name: 'addr', internalType: 'address payable', type: 'address' }],
  },
  {
    stateMutability: 'payable',
    type: 'function',
    inputs: [
      {
        name: 'opt',
        internalType: 'struct BaseNFTVault.BridgeTransferOp',
        type: 'tuple',
        components: [
          { name: 'destChainId', internalType: 'uint256', type: 'uint256' },
          { name: 'to', internalType: 'address', type: 'address' },
          { name: 'token', internalType: 'address', type: 'address' },
          { name: 'tokenIds', internalType: 'uint256[]', type: 'uint256[]' },
          { name: 'amounts', internalType: 'uint256[]', type: 'uint256[]' },
          { name: 'gasLimit', internalType: 'uint256', type: 'uint256' },
          { name: 'fee', internalType: 'uint256', type: 'uint256' },
          { name: 'refundTo', internalType: 'address', type: 'address' },
          { name: 'memo', internalType: 'string', type: 'string' },
        ],
      },
    ],
    name: 'sendToken',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'newAddressManager', internalType: 'address', type: 'address' }],
    name: 'setAddressManager',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'interfaceId', internalType: 'bytes4', type: 'bytes4' }],
    name: 'supportsInterface',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'newOwner', internalType: 'address', type: 'address' }],
    name: 'transferOwnership',
    outputs: [],
  },
] as const;

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// ERC1155Vault
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const erc1155VaultABI = [
  { type: 'error', inputs: [], name: 'RESOLVER_DENIED' },
  { type: 'error', inputs: [], name: 'RESOLVER_INVALID_ADDR' },
  {
    type: 'error',
    inputs: [
      { name: 'chainId', internalType: 'uint256', type: 'uint256' },
      { name: 'name', internalType: 'bytes32', type: 'bytes32' },
    ],
    name: 'RESOLVER_ZERO_ADDR',
  },
  { type: 'error', inputs: [], name: 'VAULT_INTERFACE_NOT_SUPPORTED' },
  { type: 'error', inputs: [], name: 'VAULT_INVALID_AMOUNT' },
  { type: 'error', inputs: [], name: 'VAULT_INVALID_FROM' },
  { type: 'error', inputs: [], name: 'VAULT_INVALID_SRC_CHAIN_ID' },
  { type: 'error', inputs: [], name: 'VAULT_INVALID_TO' },
  { type: 'error', inputs: [], name: 'VAULT_INVALID_TOKEN' },
  { type: 'error', inputs: [], name: 'VAULT_INVALID_USER' },
  { type: 'error', inputs: [], name: 'VAULT_MAX_TOKEN_PER_TXN_EXCEEDED' },
  { type: 'error', inputs: [], name: 'VAULT_MESSAGE_NOT_FAILED' },
  { type: 'error', inputs: [], name: 'VAULT_MESSAGE_RELEASED_ALREADY' },
  { type: 'error', inputs: [], name: 'VAULT_TOKEN_ARRAY_MISMATCH' },
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'addressManager', internalType: 'address', type: 'address', indexed: true }],
    name: 'AddressManagerChanged',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'chainId', internalType: 'uint256', type: 'uint256', indexed: true },
      { name: 'ctoken', internalType: 'address', type: 'address', indexed: true },
      { name: 'btoken', internalType: 'address', type: 'address', indexed: true },
      { name: 'ctokenSymbol', internalType: 'string', type: 'string', indexed: false },
      { name: 'ctokenName', internalType: 'string', type: 'string', indexed: false },
    ],
    name: 'BridgedTokenDeployed',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'version', internalType: 'uint8', type: 'uint8', indexed: false }],
    name: 'Initialized',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'previousOwner', internalType: 'address', type: 'address', indexed: true },
      { name: 'newOwner', internalType: 'address', type: 'address', indexed: true },
    ],
    name: 'OwnershipTransferred',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'msgHash', internalType: 'bytes32', type: 'bytes32', indexed: true },
      { name: 'from', internalType: 'address', type: 'address', indexed: true },
      { name: 'to', internalType: 'address', type: 'address', indexed: true },
      { name: 'srcChainId', internalType: 'uint256', type: 'uint256', indexed: false },
      { name: 'token', internalType: 'address', type: 'address', indexed: false },
      { name: 'tokenIds', internalType: 'uint256[]', type: 'uint256[]', indexed: false },
      { name: 'amounts', internalType: 'uint256[]', type: 'uint256[]', indexed: false },
    ],
    name: 'TokenReceived',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'msgHash', internalType: 'bytes32', type: 'bytes32', indexed: true },
      { name: 'from', internalType: 'address', type: 'address', indexed: true },
      { name: 'token', internalType: 'address', type: 'address', indexed: false },
      { name: 'tokenIds', internalType: 'uint256[]', type: 'uint256[]', indexed: false },
      { name: 'amounts', internalType: 'uint256[]', type: 'uint256[]', indexed: false },
    ],
    name: 'TokenReleased',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'msgHash', internalType: 'bytes32', type: 'bytes32', indexed: true },
      { name: 'from', internalType: 'address', type: 'address', indexed: true },
      { name: 'to', internalType: 'address', type: 'address', indexed: true },
      { name: 'destChainId', internalType: 'uint256', type: 'uint256', indexed: false },
      { name: 'token', internalType: 'address', type: 'address', indexed: false },
      { name: 'tokenIds', internalType: 'uint256[]', type: 'uint256[]', indexed: false },
      { name: 'amounts', internalType: 'uint256[]', type: 'uint256[]', indexed: false },
    ],
    name: 'TokenSent',
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'ERC1155_INTERFACE_ID',
    outputs: [{ name: '', internalType: 'bytes4', type: 'bytes4' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'ERC721_INTERFACE_ID',
    outputs: [{ name: '', internalType: 'bytes4', type: 'bytes4' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'addressManager',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: '', internalType: 'address', type: 'address' }],
    name: 'bridgedToCanonical',
    outputs: [
      { name: 'chainId', internalType: 'uint256', type: 'uint256' },
      { name: 'addr', internalType: 'address', type: 'address' },
      { name: 'symbol', internalType: 'string', type: 'string' },
      { name: 'name', internalType: 'string', type: 'string' },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: '', internalType: 'uint256', type: 'uint256' },
      { name: '', internalType: 'address', type: 'address' },
    ],
    name: 'canonicalToBridged',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'addressManager', internalType: 'address', type: 'address' }],
    name: 'init',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: '', internalType: 'address', type: 'address' }],
    name: 'isBridgedToken',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'pure',
    type: 'function',
    inputs: [
      { name: '', internalType: 'address', type: 'address' },
      { name: '', internalType: 'address', type: 'address' },
      { name: '', internalType: 'uint256[]', type: 'uint256[]' },
      { name: '', internalType: 'uint256[]', type: 'uint256[]' },
      { name: '', internalType: 'bytes', type: 'bytes' },
    ],
    name: 'onERC1155BatchReceived',
    outputs: [{ name: '', internalType: 'bytes4', type: 'bytes4' }],
  },
  {
    stateMutability: 'pure',
    type: 'function',
    inputs: [
      { name: '', internalType: 'address', type: 'address' },
      { name: '', internalType: 'address', type: 'address' },
      { name: '', internalType: 'uint256', type: 'uint256' },
      { name: '', internalType: 'uint256', type: 'uint256' },
      { name: '', internalType: 'bytes', type: 'bytes' },
    ],
    name: 'onERC1155Received',
    outputs: [{ name: '', internalType: 'bytes4', type: 'bytes4' }],
  },
  {
    stateMutability: 'payable',
    type: 'function',
    inputs: [
      {
        name: 'message',
        internalType: 'struct IBridge.Message',
        type: 'tuple',
        components: [
          { name: 'id', internalType: 'uint256', type: 'uint256' },
          { name: 'from', internalType: 'address', type: 'address' },
          { name: 'srcChainId', internalType: 'uint256', type: 'uint256' },
          { name: 'destChainId', internalType: 'uint256', type: 'uint256' },
          { name: 'user', internalType: 'address', type: 'address' },
          { name: 'to', internalType: 'address', type: 'address' },
          { name: 'refundTo', internalType: 'address', type: 'address' },
          { name: 'value', internalType: 'uint256', type: 'uint256' },
          { name: 'fee', internalType: 'uint256', type: 'uint256' },
          { name: 'gasLimit', internalType: 'uint256', type: 'uint256' },
          { name: 'data', internalType: 'bytes', type: 'bytes' },
          { name: 'memo', internalType: 'string', type: 'string' },
        ],
      },
    ],
    name: 'onMessageRecalled',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'owner',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'payable',
    type: 'function',
    inputs: [
      {
        name: 'ctoken',
        internalType: 'struct BaseNFTVault.CanonicalNFT',
        type: 'tuple',
        components: [
          { name: 'chainId', internalType: 'uint256', type: 'uint256' },
          { name: 'addr', internalType: 'address', type: 'address' },
          { name: 'symbol', internalType: 'string', type: 'string' },
          { name: 'name', internalType: 'string', type: 'string' },
        ],
      },
      { name: 'from', internalType: 'address', type: 'address' },
      { name: 'to', internalType: 'address', type: 'address' },
      { name: 'tokenIds', internalType: 'uint256[]', type: 'uint256[]' },
      { name: 'amounts', internalType: 'uint256[]', type: 'uint256[]' },
    ],
    name: 'receiveToken',
    outputs: [],
  },
  { stateMutability: 'nonpayable', type: 'function', inputs: [], name: 'renounceOwnership', outputs: [] },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'chainId', internalType: 'uint256', type: 'uint256' },
      { name: 'name', internalType: 'bytes32', type: 'bytes32' },
      { name: 'allowZeroAddress', internalType: 'bool', type: 'bool' },
    ],
    name: 'resolve',
    outputs: [{ name: 'addr', internalType: 'address payable', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'name', internalType: 'bytes32', type: 'bytes32' },
      { name: 'allowZeroAddress', internalType: 'bool', type: 'bool' },
    ],
    name: 'resolve',
    outputs: [{ name: 'addr', internalType: 'address payable', type: 'address' }],
  },
  {
    stateMutability: 'payable',
    type: 'function',
    inputs: [
      {
        name: 'opt',
        internalType: 'struct BaseNFTVault.BridgeTransferOp',
        type: 'tuple',
        components: [
          { name: 'destChainId', internalType: 'uint256', type: 'uint256' },
          { name: 'to', internalType: 'address', type: 'address' },
          { name: 'token', internalType: 'address', type: 'address' },
          { name: 'tokenIds', internalType: 'uint256[]', type: 'uint256[]' },
          { name: 'amounts', internalType: 'uint256[]', type: 'uint256[]' },
          { name: 'gasLimit', internalType: 'uint256', type: 'uint256' },
          { name: 'fee', internalType: 'uint256', type: 'uint256' },
          { name: 'refundTo', internalType: 'address', type: 'address' },
          { name: 'memo', internalType: 'string', type: 'string' },
        ],
      },
    ],
    name: 'sendToken',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'newAddressManager', internalType: 'address', type: 'address' }],
    name: 'setAddressManager',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'interfaceId', internalType: 'bytes4', type: 'bytes4' }],
    name: 'supportsInterface',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'newOwner', internalType: 'address', type: 'address' }],
    name: 'transferOwnership',
    outputs: [],
  },
] as const;

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// CrossChainSync
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const crossChainSyncABI = [
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'srcHeight', internalType: 'uint64', type: 'uint64', indexed: true },
      { name: 'blockHash', internalType: 'bytes32', type: 'bytes32', indexed: false },
      { name: 'signalRoot', internalType: 'bytes32', type: 'bytes32', indexed: false },
    ],
    name: 'CrossChainSynced',
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'blockId', internalType: 'uint64', type: 'uint64' }],
    name: 'getCrossChainBlockHash',
    outputs: [{ name: '', internalType: 'bytes32', type: 'bytes32' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'blockId', internalType: 'uint64', type: 'uint64' }],
    name: 'getCrossChainSignalRoot',
    outputs: [{ name: '', internalType: 'bytes32', type: 'bytes32' }],
  },
] as const;

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// FreeMintERC20
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const freeMintErc20ABI = [
  {
    stateMutability: 'nonpayable',
    type: 'constructor',
    inputs: [
      { name: 'name', internalType: 'string', type: 'string' },
      { name: 'symbol', internalType: 'string', type: 'string' },
    ],
  },
  { type: 'error', inputs: [], name: 'HasMinted' },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'owner', internalType: 'address', type: 'address', indexed: true },
      { name: 'spender', internalType: 'address', type: 'address', indexed: true },
      { name: 'value', internalType: 'uint256', type: 'uint256', indexed: false },
    ],
    name: 'Approval',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'from', internalType: 'address', type: 'address', indexed: true },
      { name: 'to', internalType: 'address', type: 'address', indexed: true },
      { name: 'value', internalType: 'uint256', type: 'uint256', indexed: false },
    ],
    name: 'Transfer',
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'owner', internalType: 'address', type: 'address' },
      { name: 'spender', internalType: 'address', type: 'address' },
    ],
    name: 'allowance',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'spender', internalType: 'address', type: 'address' },
      { name: 'amount', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'approve',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'account', internalType: 'address', type: 'address' }],
    name: 'balanceOf',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'decimals',
    outputs: [{ name: '', internalType: 'uint8', type: 'uint8' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'spender', internalType: 'address', type: 'address' },
      { name: 'subtractedValue', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'decreaseAllowance',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'spender', internalType: 'address', type: 'address' },
      { name: 'addedValue', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'increaseAllowance',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'to', internalType: 'address', type: 'address' }],
    name: 'mint',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'minter', internalType: 'address', type: 'address' }],
    name: 'minters',
    outputs: [{ name: 'hasMinted', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'name',
    outputs: [{ name: '', internalType: 'string', type: 'string' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'symbol',
    outputs: [{ name: '', internalType: 'string', type: 'string' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'totalSupply',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'to', internalType: 'address', type: 'address' },
      { name: 'amount', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'transfer',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'from', internalType: 'address', type: 'address' },
      { name: 'to', internalType: 'address', type: 'address' },
      { name: 'amount', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'transferFrom',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
] as const;

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Erc20
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const erc20ABI = [
  { type: 'error', inputs: [], name: 'BRIDGED_TOKEN_CANNOT_RECEIVE' },
  { type: 'error', inputs: [], name: 'BRIDGED_TOKEN_INVALID_PARAMS' },
  { type: 'error', inputs: [], name: 'RESOLVER_DENIED' },
  { type: 'error', inputs: [], name: 'RESOLVER_INVALID_ADDR' },
  {
    type: 'error',
    inputs: [
      { name: 'chainId', internalType: 'uint256', type: 'uint256' },
      { name: 'name', internalType: 'bytes32', type: 'bytes32' },
    ],
    name: 'RESOLVER_ZERO_ADDR',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'addressManager', internalType: 'address', type: 'address', indexed: true }],
    name: 'AddressManagerChanged',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'owner', internalType: 'address', type: 'address', indexed: true },
      { name: 'spender', internalType: 'address', type: 'address', indexed: true },
      { name: 'value', internalType: 'uint256', type: 'uint256', indexed: false },
    ],
    name: 'Approval',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'version', internalType: 'uint8', type: 'uint8', indexed: false }],
    name: 'Initialized',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'previousOwner', internalType: 'address', type: 'address', indexed: true },
      { name: 'newOwner', internalType: 'address', type: 'address', indexed: true },
    ],
    name: 'OwnershipTransferred',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'from', internalType: 'address', type: 'address', indexed: true },
      { name: 'to', internalType: 'address', type: 'address', indexed: true },
      { name: 'value', internalType: 'uint256', type: 'uint256', indexed: false },
    ],
    name: 'Transfer',
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'addressManager',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'owner', internalType: 'address', type: 'address' },
      { name: 'spender', internalType: 'address', type: 'address' },
    ],
    name: 'allowance',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'spender', internalType: 'address', type: 'address' },
      { name: 'amount', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'approve',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'account', internalType: 'address', type: 'address' }],
    name: 'balanceOf',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'account', internalType: 'address', type: 'address' },
      { name: 'amount', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'burn',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'canonical',
    outputs: [
      { name: '', internalType: 'address', type: 'address' },
      { name: '', internalType: 'uint256', type: 'uint256' },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'decimals',
    outputs: [{ name: '', internalType: 'uint8', type: 'uint8' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'spender', internalType: 'address', type: 'address' },
      { name: 'subtractedValue', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'decreaseAllowance',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'spender', internalType: 'address', type: 'address' },
      { name: 'addedValue', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'increaseAllowance',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: '_addressManager', internalType: 'address', type: 'address' },
      { name: '_srcToken', internalType: 'address', type: 'address' },
      { name: '_srcChainId', internalType: 'uint256', type: 'uint256' },
      { name: '_decimals', internalType: 'uint8', type: 'uint8' },
      { name: '_symbol', internalType: 'string', type: 'string' },
      { name: '_name', internalType: 'string', type: 'string' },
    ],
    name: 'init',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'account', internalType: 'address', type: 'address' },
      { name: 'amount', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'mint',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'name',
    outputs: [{ name: '', internalType: 'string', type: 'string' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'owner',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  { stateMutability: 'nonpayable', type: 'function', inputs: [], name: 'renounceOwnership', outputs: [] },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'chainId', internalType: 'uint256', type: 'uint256' },
      { name: 'name', internalType: 'bytes32', type: 'bytes32' },
      { name: 'allowZeroAddress', internalType: 'bool', type: 'bool' },
    ],
    name: 'resolve',
    outputs: [{ name: 'addr', internalType: 'address payable', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'name', internalType: 'bytes32', type: 'bytes32' },
      { name: 'allowZeroAddress', internalType: 'bool', type: 'bool' },
    ],
    name: 'resolve',
    outputs: [{ name: 'addr', internalType: 'address payable', type: 'address' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'newAddressManager', internalType: 'address', type: 'address' }],
    name: 'setAddressManager',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'srcChainId',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'srcToken',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'symbol',
    outputs: [{ name: '', internalType: 'string', type: 'string' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'totalSupply',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'to', internalType: 'address', type: 'address' },
      { name: 'amount', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'transfer',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'from', internalType: 'address', type: 'address' },
      { name: 'to', internalType: 'address', type: 'address' },
      { name: 'amount', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'transferFrom',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'newOwner', internalType: 'address', type: 'address' }],
    name: 'transferOwnership',
    outputs: [],
  },
] as const;

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Erc721
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const erc721ABI = [
  { type: 'error', inputs: [], name: 'BRIDGED_TOKEN_CANNOT_RECEIVE' },
  { type: 'error', inputs: [], name: 'BRIDGED_TOKEN_INVALID_BURN' },
  { type: 'error', inputs: [], name: 'BRIDGED_TOKEN_INVALID_PARAMS' },
  { type: 'error', inputs: [], name: 'RESOLVER_DENIED' },
  { type: 'error', inputs: [], name: 'RESOLVER_INVALID_ADDR' },
  {
    type: 'error',
    inputs: [
      { name: 'chainId', internalType: 'uint256', type: 'uint256' },
      { name: 'name', internalType: 'bytes32', type: 'bytes32' },
    ],
    name: 'RESOLVER_ZERO_ADDR',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'addressManager', internalType: 'address', type: 'address', indexed: true }],
    name: 'AddressManagerChanged',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'owner', internalType: 'address', type: 'address', indexed: true },
      { name: 'approved', internalType: 'address', type: 'address', indexed: true },
      { name: 'tokenId', internalType: 'uint256', type: 'uint256', indexed: true },
    ],
    name: 'Approval',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'owner', internalType: 'address', type: 'address', indexed: true },
      { name: 'operator', internalType: 'address', type: 'address', indexed: true },
      { name: 'approved', internalType: 'bool', type: 'bool', indexed: false },
    ],
    name: 'ApprovalForAll',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'version', internalType: 'uint8', type: 'uint8', indexed: false }],
    name: 'Initialized',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'previousOwner', internalType: 'address', type: 'address', indexed: true },
      { name: 'newOwner', internalType: 'address', type: 'address', indexed: true },
    ],
    name: 'OwnershipTransferred',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'from', internalType: 'address', type: 'address', indexed: true },
      { name: 'to', internalType: 'address', type: 'address', indexed: true },
      { name: 'tokenId', internalType: 'uint256', type: 'uint256', indexed: true },
    ],
    name: 'Transfer',
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'addressManager',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'to', internalType: 'address', type: 'address' },
      { name: 'tokenId', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'approve',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'owner', internalType: 'address', type: 'address' }],
    name: 'balanceOf',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'account', internalType: 'address', type: 'address' },
      { name: 'tokenId', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'burn',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'tokenId', internalType: 'uint256', type: 'uint256' }],
    name: 'getApproved',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: '_addressManager', internalType: 'address', type: 'address' },
      { name: '_srcToken', internalType: 'address', type: 'address' },
      { name: '_srcChainId', internalType: 'uint256', type: 'uint256' },
      { name: '_symbol', internalType: 'string', type: 'string' },
      { name: '_name', internalType: 'string', type: 'string' },
    ],
    name: 'init',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'owner', internalType: 'address', type: 'address' },
      { name: 'operator', internalType: 'address', type: 'address' },
    ],
    name: 'isApprovedForAll',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'account', internalType: 'address', type: 'address' },
      { name: 'tokenId', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'mint',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'name',
    outputs: [{ name: '', internalType: 'string', type: 'string' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'owner',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'tokenId', internalType: 'uint256', type: 'uint256' }],
    name: 'ownerOf',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  { stateMutability: 'nonpayable', type: 'function', inputs: [], name: 'renounceOwnership', outputs: [] },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'chainId', internalType: 'uint256', type: 'uint256' },
      { name: 'name', internalType: 'bytes32', type: 'bytes32' },
      { name: 'allowZeroAddress', internalType: 'bool', type: 'bool' },
    ],
    name: 'resolve',
    outputs: [{ name: 'addr', internalType: 'address payable', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'name', internalType: 'bytes32', type: 'bytes32' },
      { name: 'allowZeroAddress', internalType: 'bool', type: 'bool' },
    ],
    name: 'resolve',
    outputs: [{ name: 'addr', internalType: 'address payable', type: 'address' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'from', internalType: 'address', type: 'address' },
      { name: 'to', internalType: 'address', type: 'address' },
      { name: 'tokenId', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'safeTransferFrom',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'from', internalType: 'address', type: 'address' },
      { name: 'to', internalType: 'address', type: 'address' },
      { name: 'tokenId', internalType: 'uint256', type: 'uint256' },
      { name: 'data', internalType: 'bytes', type: 'bytes' },
    ],
    name: 'safeTransferFrom',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'newAddressManager', internalType: 'address', type: 'address' }],
    name: 'setAddressManager',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'operator', internalType: 'address', type: 'address' },
      { name: 'approved', internalType: 'bool', type: 'bool' },
    ],
    name: 'setApprovalForAll',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'source',
    outputs: [
      { name: '', internalType: 'address', type: 'address' },
      { name: '', internalType: 'uint256', type: 'uint256' },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'srcChainId',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'srcToken',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'interfaceId', internalType: 'bytes4', type: 'bytes4' }],
    name: 'supportsInterface',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'symbol',
    outputs: [{ name: '', internalType: 'string', type: 'string' }],
  },
  {
    stateMutability: 'pure',
    type: 'function',
    inputs: [{ name: 'tokenId', internalType: 'uint256', type: 'uint256' }],
    name: 'tokenURI',
    outputs: [{ name: '', internalType: 'string', type: 'string' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'from', internalType: 'address', type: 'address' },
      { name: 'to', internalType: 'address', type: 'address' },
      { name: 'tokenId', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'transferFrom',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'newOwner', internalType: 'address', type: 'address' }],
    name: 'transferOwnership',
    outputs: [],
  },
] as const;

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Erc1155
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const erc1155ABI = [
  { type: 'error', inputs: [], name: 'BRIDGED_TOKEN_CANNOT_RECEIVE' },
  { type: 'error', inputs: [], name: 'BRIDGED_TOKEN_INVALID_PARAMS' },
  { type: 'error', inputs: [], name: 'RESOLVER_DENIED' },
  { type: 'error', inputs: [], name: 'RESOLVER_INVALID_ADDR' },
  {
    type: 'error',
    inputs: [
      { name: 'chainId', internalType: 'uint256', type: 'uint256' },
      { name: 'name', internalType: 'bytes32', type: 'bytes32' },
    ],
    name: 'RESOLVER_ZERO_ADDR',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'addressManager', internalType: 'address', type: 'address', indexed: true }],
    name: 'AddressManagerChanged',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'account', internalType: 'address', type: 'address', indexed: true },
      { name: 'operator', internalType: 'address', type: 'address', indexed: true },
      { name: 'approved', internalType: 'bool', type: 'bool', indexed: false },
    ],
    name: 'ApprovalForAll',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [{ name: 'version', internalType: 'uint8', type: 'uint8', indexed: false }],
    name: 'Initialized',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'previousOwner', internalType: 'address', type: 'address', indexed: true },
      { name: 'newOwner', internalType: 'address', type: 'address', indexed: true },
    ],
    name: 'OwnershipTransferred',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'from', internalType: 'address', type: 'address', indexed: true },
      { name: 'to', internalType: 'address', type: 'address', indexed: true },
      { name: 'tokenId', internalType: 'uint256', type: 'uint256', indexed: false },
      { name: 'amount', internalType: 'uint256', type: 'uint256', indexed: false },
    ],
    name: 'Transfer',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'operator', internalType: 'address', type: 'address', indexed: true },
      { name: 'from', internalType: 'address', type: 'address', indexed: true },
      { name: 'to', internalType: 'address', type: 'address', indexed: true },
      { name: 'ids', internalType: 'uint256[]', type: 'uint256[]', indexed: false },
      { name: 'values', internalType: 'uint256[]', type: 'uint256[]', indexed: false },
    ],
    name: 'TransferBatch',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'operator', internalType: 'address', type: 'address', indexed: true },
      { name: 'from', internalType: 'address', type: 'address', indexed: true },
      { name: 'to', internalType: 'address', type: 'address', indexed: true },
      { name: 'id', internalType: 'uint256', type: 'uint256', indexed: false },
      { name: 'value', internalType: 'uint256', type: 'uint256', indexed: false },
    ],
    name: 'TransferSingle',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'value', internalType: 'string', type: 'string', indexed: false },
      { name: 'id', internalType: 'uint256', type: 'uint256', indexed: true },
    ],
    name: 'URI',
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'addressManager',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'account', internalType: 'address', type: 'address' },
      { name: 'id', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'balanceOf',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'accounts', internalType: 'address[]', type: 'address[]' },
      { name: 'ids', internalType: 'uint256[]', type: 'uint256[]' },
    ],
    name: 'balanceOfBatch',
    outputs: [{ name: '', internalType: 'uint256[]', type: 'uint256[]' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'account', internalType: 'address', type: 'address' },
      { name: 'tokenId', internalType: 'uint256', type: 'uint256' },
      { name: 'amount', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'burn',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: '_addressManager', internalType: 'address', type: 'address' },
      { name: '_srcToken', internalType: 'address', type: 'address' },
      { name: '_srcChainId', internalType: 'uint256', type: 'uint256' },
      { name: '_symbol', internalType: 'string', type: 'string' },
      { name: '_name', internalType: 'string', type: 'string' },
    ],
    name: 'init',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'account', internalType: 'address', type: 'address' },
      { name: 'operator', internalType: 'address', type: 'address' },
    ],
    name: 'isApprovedForAll',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'account', internalType: 'address', type: 'address' },
      { name: 'tokenId', internalType: 'uint256', type: 'uint256' },
      { name: 'amount', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'mint',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'name',
    outputs: [{ name: '', internalType: 'string', type: 'string' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'owner',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  { stateMutability: 'nonpayable', type: 'function', inputs: [], name: 'renounceOwnership', outputs: [] },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'chainId', internalType: 'uint256', type: 'uint256' },
      { name: 'name', internalType: 'bytes32', type: 'bytes32' },
      { name: 'allowZeroAddress', internalType: 'bool', type: 'bool' },
    ],
    name: 'resolve',
    outputs: [{ name: 'addr', internalType: 'address payable', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'name', internalType: 'bytes32', type: 'bytes32' },
      { name: 'allowZeroAddress', internalType: 'bool', type: 'bool' },
    ],
    name: 'resolve',
    outputs: [{ name: 'addr', internalType: 'address payable', type: 'address' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'from', internalType: 'address', type: 'address' },
      { name: 'to', internalType: 'address', type: 'address' },
      { name: 'ids', internalType: 'uint256[]', type: 'uint256[]' },
      { name: 'amounts', internalType: 'uint256[]', type: 'uint256[]' },
      { name: 'data', internalType: 'bytes', type: 'bytes' },
    ],
    name: 'safeBatchTransferFrom',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'from', internalType: 'address', type: 'address' },
      { name: 'to', internalType: 'address', type: 'address' },
      { name: 'tokenId', internalType: 'uint256', type: 'uint256' },
      { name: 'amount', internalType: 'uint256', type: 'uint256' },
      { name: 'data', internalType: 'bytes', type: 'bytes' },
    ],
    name: 'safeTransferFrom',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'newAddressManager', internalType: 'address', type: 'address' }],
    name: 'setAddressManager',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'operator', internalType: 'address', type: 'address' },
      { name: 'approved', internalType: 'bool', type: 'bool' },
    ],
    name: 'setApprovalForAll',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'srcChainId',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'srcToken',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'interfaceId', internalType: 'bytes4', type: 'bytes4' }],
    name: 'supportsInterface',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'symbol',
    outputs: [{ name: '', internalType: 'string', type: 'string' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'newOwner', internalType: 'address', type: 'address' }],
    name: 'transferOwnership',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
    name: 'uri',
    outputs: [{ name: '', internalType: 'string', type: 'string' }],
  },
] as const;
